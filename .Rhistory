titanic_training <- training(titanic_split) # extract the training data
titanic_testing <- testing(titanic_split) # extract the testing data
#titanic_training
# titanic_testing
ggplot(titanic_training, aes(survived))+
geom_bar()
cor_titanic <- titanic_training %>%
select(-c(survived, name, sex, ticket, cabin, embarked)) %>%  # eliminate chr type elements
correlate()
cor_titanic
rplot(cor_titanic) # plot the correlation between continuous elements.
titanic_recipe <- recipe(survived ~ pclass+sex+age+sib_sp+parch+fare, data = titanic_training) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with('sex'):fare+
age:fare)
summary(titanic_recipe)
log_reg <- logistic_reg() %>%
set_engine('glm') %>%
set_mode('classification')
log_wf <- workflow() %>%
add_model(log_reg) %>%
add_recipe(titanic_recipe)
log_fit <- fit(log_wf, titanic_training)
lda_mode <- discrim_linear() %>%
set_engine('MASS') %>%
set_mode('classification')
lda_wf <- workflow() %>%
add_model(lda_mode) %>%
add_recipe(titanic_recipe)
lda_fit <- fit(lda_wf, titanic_training)
qda_mode <- discrim_quad() %>%
set_engine('MASS') %>%
set_mode('classification')
qda_wf <- workflow() %>%
add_model(qda_mode) %>%
add_recipe(titanic_recipe)
qda_fit <- fit(qda_wf, titanic_training)
nb_mode <- naive_Bayes() %>%
set_mode("classification") %>%
set_engine("klaR") %>%
set_args(usekernel = FALSE)
nb_wf <- workflow() %>%
add_model(nb_mode) %>%
add_recipe(titanic_recipe)
nb_fit <- fit(nb_wf, titanic_training)
log_acc <- predict(log_fit, new_data = titanic_training, type = 'class') %>%
bind_cols(titanic_training %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
detach("package:AUC", unload = TRUE)
library(tidymodels)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(corrr)
library(discrim)
library(poissonreg)
library(klaR)
tidymodels_prefer()
df <- read.csv('/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/HWs/homework-3/data/titanic.csv') %>%
mutate(survived = factor(survived,
levels = c("Yes", "No")),
pclass = factor(pclass),
coin_flip = c(rep(0, 445), rep(1, 446)))
set.seed(891) # keep the outcome stable
titanic_split <- initial_split(df, prop = 0.80, strata = survived) # split the data and stratified on survived
titanic_training <- training(titanic_split) # extract the training data
titanic_testing <- testing(titanic_split) # extract the testing data
#titanic_training
# titanic_testing
ggplot(titanic_training, aes(survived))+
geom_bar()
cor_titanic <- titanic_training %>%
select(-c(survived, name, sex, ticket, cabin, embarked)) %>%  # eliminate chr type elements
correlate()
cor_titanic
rplot(cor_titanic) # plot the correlation between continuous elements.
titanic_recipe <- recipe(survived ~ pclass+sex+age+sib_sp+parch+fare, data = titanic_training) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with('sex'):fare+
age:fare)
summary(titanic_recipe)
log_reg <- logistic_reg() %>%
set_engine('glm') %>%
set_mode('classification')
log_wf <- workflow() %>%
add_model(log_reg) %>%
add_recipe(titanic_recipe)
log_fit <- fit(log_wf, titanic_training)
lda_mode <- discrim_linear() %>%
set_engine('MASS') %>%
set_mode('classification')
lda_wf <- workflow() %>%
add_model(lda_mode) %>%
add_recipe(titanic_recipe)
lda_fit <- fit(lda_wf, titanic_training)
qda_mode <- discrim_quad() %>%
set_engine('MASS') %>%
set_mode('classification')
qda_wf <- workflow() %>%
add_model(qda_mode) %>%
add_recipe(titanic_recipe)
qda_fit <- fit(qda_wf, titanic_training)
nb_mode <- naive_Bayes() %>%
set_mode("classification") %>%
set_engine("klaR") %>%
set_args(usekernel = FALSE)
nb_wf <- workflow() %>%
add_model(nb_mode) %>%
add_recipe(titanic_recipe)
nb_fit <- fit(nb_wf, titanic_training)
log_acc <- predict(log_fit, new_data = titanic_training, type = 'class') %>%
bind_cols(titanic_training %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
lda_acc <- predict(lda_fit, new_data = titanic_training, type = 'class') %>%
bind_cols(titanic_training %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
qda_acc <- predict(qda_fit, new_data = titanic_training, type = 'class') %>%
bind_cols(titanic_training %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
nb_acc <- predict(nb_fit, new_data = titanic_training, type = 'class') %>%
bind_cols(titanic_training %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
results <- bind_rows(log_acc, lda_acc, qda_acc, nb_acc) %>%
tibble() %>% mutate(model = c("Logistic Regression", "Linear Discrminant Analysis", "Quadratic Discrminant Analysis", "Naive-Bayes Analysis")) %>%
select(model, .estimate)
results
log_fit_test <- fit(log_wf, titanic_testing)
log_test_acc <- predict(log_fit_test, titanic_testing) %>%
bind_cols(titanic_testing %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
log_test_acc
log_result <- augment(log_fit_test, titanic_testing)
log_result %>%
conf_mat(truth = survived, estimate = .pred_class) %>%
autoplot(type = "heatmap")
log_result %>%
roc_curve(survived, .pred_Yes) %>%
autoplot()
auc(log_result)
?auc()
library(tidymodels)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(corrr)
library(discrim)
library(poissonreg)
library(klaR)
install.packages('pROC')
tidymodels_prefer()
library(tidymodels)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(corrr)
library(discrim)
library(poissonreg)
library(klaR)
library(pROC)
tidymodels_prefer()
log_fit_test <- fit(log_wf, titanic_testing)
log_test_acc <- predict(log_fit_test, titanic_testing) %>%
bind_cols(titanic_testing %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
log_test_acc
log_result <- augment(log_fit_test, titanic_testing)
log_result %>%
conf_mat(truth = survived, estimate = .pred_class) %>%
autoplot(type = "heatmap")
log_result %>%
roc_curve(survived, .pred_Yes) %>%
autoplot()
auc(log_result)
log_fit_test <- fit(log_wf, titanic_testing)
log_test_acc <- predict(log_fit_test, titanic_testing) %>%
bind_cols(titanic_testing %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
log_test_acc
log_result <- augment(log_fit_test, titanic_testing)
log_result %>%
conf_mat(truth = survived, estimate = .pred_class) %>%
autoplot(type = "heatmap")
log_result %>%
roc_curve(survived, .pred_Yes) %>%
autoplot()
rocCurve <- roc_curve(log_result, survived, .pred_Yes)
auc(lrocCurve)
log_fit_test <- fit(log_wf, titanic_testing)
log_test_acc <- predict(log_fit_test, titanic_testing) %>%
bind_cols(titanic_testing %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
log_test_acc
log_result <- augment(log_fit_test, titanic_testing)
log_result %>%
conf_mat(truth = survived, estimate = .pred_class) %>%
autoplot(type = "heatmap")
log_result %>%
roc_curve(survived, .pred_Yes) %>%
autoplot()
rocCurve <- roc_curve(log_result, survived, .pred_Yes)
auc(rocCurve)
log_fit_test <- fit(log_wf, titanic_testing)
log_test_acc <- predict(log_fit_test, titanic_testing) %>%
bind_cols(titanic_testing %>% select(survived)) %>%
accuracy(truth = survived, estimate = .pred_class)
log_test_acc
log_result <- augment(log_fit_test, titanic_testing)
log_result %>%
conf_mat(truth = survived, estimate = .pred_class) %>%
autoplot(type = "heatmap")
log_result %>%
roc_curve(survived, .pred_Yes) %>%
autoplot()
log_result %>%
roc_auc(survived, .pred_Yes)
?roc_auc()
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),120,1)
library()
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),120,1)
library()
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),120,1)
library()
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),n=120,sd=1)
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),n=120,sd=1)
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),n=120,sd=1)
plot(sar120)
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),n=120,sd=1)
acf(sar120)
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),n=120,sd=1)
acf(sar120, pacf=TRUE)
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),n=120,sd=1)
acf(sar120)
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),n=120,sd=1)
acf(sar120)
pacf(sar120,plot = TRUE)
set.seed(90210)
phi=c(rep(0,11),0.8)
sar120 <- arima.sim(list(ar=phi),n=120,sd=1)
acf(sar120, lag.max = 70)
pacf(sar120, lag.max = 70, plot = TRUE)
? rep
acf_plot_func <- function(x_1, numberofzeros, x_n){
coeff <- c(x_1,rep(0,numberofzeros),x_n)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf)
}
p/acf_plot_func <- function(x_1, numberofzeros, x_n){
coeff <- c(x_1,rep(0,numberofzeros),x_n)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf)
}
plot_func <- function(x_1, numberofzeros, x_n,x_z){
coeff <- c(x_1,rep(0,numberofzeros),x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf)
}
plot_func(0.6,0.5.-0.3)
plot_func <- function(x_1, numberofzeros, x_n,x_z){
coeff <- c(x_1,rep(0,numberofzeros),x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf)
}
plot_func(0.6,0.5,-0.3)
plot_func <- function(x_1, numberofzeros, x_n,x_z){
coeff <- c(x_1,rep(0,numberofzeros),x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf)
}
plot_func(0.6,10,0.5,-0.3)
plot_func <- function(x_1, numberofzeros, x_n,x_z){
coeff <- c(x_1,rep(0,numberofzeros),x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf, type='h')
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf,type'h')
plot_func <- function(x_1, numberofzeros, x_n,x_z){
coeff <- c(x_1,rep(0,numberofzeros),x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf, type='h')
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf,type='h')
}
plot_func(0.6,10,0.5,-0.3)
plot_func <- function(x_1, numberofzeros, x_n,x_z){
coeff <- c(x_1,rep(0,numberofzeros),x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf, type='h')+abline(h=0)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf,type='h')+abline(h=0)
}
plot_func(0.6,10,0.5,-0.3)
plot_func <- function(x_1, numberofzeros){
coeff <- c(x_1,rep(0,numberofzeros),x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf, type='h')+abline(h=0)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf,type='h')+abline(h=0)
}
plot_func(-.8,0,)
plot_func <- function(x_1, numberofzeros){
coeff <- c(x_1,rep(0,numberofzeros),x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf, type='h')+abline(h=0)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf,type='h')+abline(h=0)
}
plot_func(-.8,0)
plot_func <- function(x_1, numberofzeros){
coeff <- c(x_1,rep(0,numberofzeros))#,x_n,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf, type='h')+abline(h=0)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf,type='h')+abline(h=0)
}
plot_func(-.8,0)
plot_func <- function(x_1, numberofzeros,x_n){
coeff <- c(x_1,rep(0,numberofzeros),x_n)#,x_z)
theacf <- ARMAacf(ar=coeff,lag.max = 70)
plot(theacf, type='h')+abline(h=0)
thepacf <- ARMAacf(ar=coeff, lag.max = 70, pacf = T)
plot(thepacf,type='h')+abline(h=0)
}
plot_func(-.8,0,0.6)
ARMAacf(ar=c(1,0.1,0.2), ma=c(1,0.1,0.2,0.3),lag.max = 70)
z <- ARMAacf(ar=c(1,0.1,0.2), ma=c(1,0.1,0.2,0.3),lag.max = 70)
plot(z)
z <- ARMAacf(ar=c(0.1,0.2), ma=c(0.1,0.2,0.3),lag.max = 70)
plot(z)
z <- ARMAacf(ar=c(0.1,0.2), ma=c(0.1,0.2,0.3),lag.max = 70)
plot(z,type = 'h')
z <- ARMAacf(ar=c(0.1,0.2), ma=c(0.1,0.2,0.3),lag.max = 70)
plot(z,type = 'h')+abline(h=0)
?ARMAacf
z <- ARMAacf(ar=c(0.1,0.2), ma=c(0.1,0.2,0.3))
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(1,0.1,0.2), ma=c(1,0.1,0.2,0.3))
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(0.1,0.2), ma=c(0.1,0.2,0.3))
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(0.6,-0.3))
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(0.6,-0.3),lag.max = 50)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(0.6),lag.max = 50)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(0.6,-0.3),lag.max = 50)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(0.8),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(-0.8),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(-0.8),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(-0.8),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(0.6,-0.3),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(rep(0,23),0.1),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(rep(0,23),0.1),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(rep(0,23),0.1),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(0,0,0.3),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(0,0,0.3),lag.max = 5,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(0,0.3),lag.max = 5,pacf = F)
plot(z,type = 'h')+abline(h=0)
x <- arima.sim(ma=c(0,0,0.1), n=200)
x <- arima.sim(model(ma=c(0,0,0.1)), n=200)
?arima.sim
x <- arima.sim(n=200, list(ma=c(0,0,0.1)))
plot(x)
x <- arima.sim(n=200, list(ma=c(0,0,0.1)))
acf(x)
x <- arima.sim(n=200, list(ma=c(0,0,0.1)))
acf(x, lag.max = 5)
x <- arima.sim(n=2000, list(ma=c(0,0,0.1)))
acf(x, lag.max = 5)
x <- arima.sim(n=2000, list(ma=c(0,0,0.1)))
pacf(x, lag.max = 5)
x <- arima.sim(n=20000, list(ma=c(0,0,0.1)))
pacf(x, lag.max = 5)
z <- ARMAacf(ar=c(0.1,0.2), ma=c(0,0,0.3),lag.max = 5,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(0,0,0.3),lag.max = 5,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(0,0,0.3),lag.max = 5,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(rep(0,2),0.3),lag.max = 5,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(rep(0,11),0.8),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),0.8),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),0.8),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),0.8),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),-0.8),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),-0.8),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),0.1,rep(0,11),0.1), ma=c(rep(0,11),0.1),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),-0.1,rep(0,11),0.1), ma=c(rep(0,11),0.1),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),0.1,rep(0,11),-0.1), ma=c(rep(0,11),0.1),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),0.1,rep(0,11),-0.1), ma=c(rep(0,11),0.1),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ar=c(rep(0,11),0.1,rep(0,11),0.1), ma=c(rep(0,11),0.1),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
x <- ARMAacf(ar=c(,0.1,0.1), ma=c(0.1),lag.max = 50,pacf = T)
x <- ARMAacf(ar=c(0.1,0.1), ma=c(0.1),lag.max = 50,pacf = T)
plot(x,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(rep(0,11),0.1),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(rep(0,11),0.1),lag.max = 50,pacf = F)
plot(z,type = 'h')+abline(h=0)
z <- ARMAacf(ma=c(rep(0,11),0.1),lag.max = 50,pacf = T)
plot(z,type = 'h')+abline(h=0)
a <- arima.sim(n=200, list(ma=c(rep(0,11),0.1)))
acf(a)
a <- arima.sim(n=200, list(ma=c(rep(0,11),0.1)))
pacf(a)
a <- arima.sim(n=2000, list(ma=c(rep(0,11),0.1)))
pacf(a)
a <- arima.sim(n=2000, list(ma=c(rep(0,11),-0.1)))
pacf(a)
a <- arima.sim(n=200000, list(ma=c(rep(0,11),-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000, list(ar=c(rep(0,11),0.1,rep(0,11),0.1),ma=c(rep(0,11),-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000, list(ar=c(rep(0,11),-0.1,rep(0,11),-0.1),ma=c(rep(0,11),-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000, list(ar=c(rep(0,11),-0.1,rep(0,11),-0.5),ma=c(rep(0,11),-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000, list(ar=c(rep(0,11),-0.1,rep(0,11),-0.1),ma=c(rep(0,11),-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000, list(ar=c(-0.1,-0.1),ma=c(-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000, list(ma=c(rep(0,11)-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000, list(ma=c(rep(0,11)-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000, list(ma=c(rep(0,11)-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=2000000, list(ma=c(rep(0,11)-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=2000000, list(ma=c(rep(0,11)-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=2000000, list(ma=c(rep(0,11)-0.1)))
acf(a,lag.max = 50)
a <- arima.sim(n=2000000, list(ma=c(rep(0,11),-0.1)))
acf(a,lag.max = 50)
a <- arima.sim(n=2000000, list(ma=c(rep(0,11),-0.1)))
pacf(a,lag.max = 50)
a <- arima.sim(n=200000000, list(ma=c(rep(0,11),-0.1)))
x <- ARMAacf(ma=c(rep(0,11),0.1),lag.max = 50,pacf = T)
plot(x,type = 'h')+abline(h=0)
x <- ARMAacf(ma=c(rep(0,11),-0.1),lag.max = 50,pacf = T)
plot(x,type = 'h')+abline(h=0)
x <- ARMAacf(ar=c(rep(0,11),0.1,rep(0,11),0.1),ma=c(rep(0,11),-0.1),lag.max = 50,pacf = T)
plot(x,type = 'h')+abline(h=0)
x <- ARMAacf(ar=c(rep(0,11),0.1,rep(0,11),-0.1),ma=c(rep(0,11),-0.1),lag.max = 50,pacf = T)
plot(x,type = 'h')+abline(h=0)
x <- ARMAacf(ar=c(-0.8),lag.max = 50,pacf = F)
plot(x,type = 'h')+abline(h=0)
x <- ARMAacf(ma=c(0.6,-0.3),lag.max = 50,pacf = T)
plot(x,type = 'h')+abline(h=0)
x <- ARMAacf(ar=c(0.6,-0.3),lag.max = 50,pacf = T)
plot(x,type = 'h')+abline(h=0)
?sarima()
library(sarima)
install.packages('sarima')
library(sarima)
library(sarima)
?sarima
