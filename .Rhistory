lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
data(penguins, package = "modeldata")
penguins <- penguins %>% na.omit()
rec <- recipe(flipper_length_mm ~ ., data = penguins)
int_mod_1 <- rec %>%
step_interact(terms = ~ bill_depth_mm:bill_length_mm)
data(penguins, package = "modeldata")
penguins <- penguins %>% na.omit()
penguins
rec <- recipe(flipper_length_mm ~ ., data = penguins)
int_mod_1 <- rec %>%
step_interact(terms = ~ bill_depth_mm:bill_length_mm)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(~ shucked_weight:type_yes+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
data(penguins, package = "modeldata")
penguins <- penguins %>% na.omit()
penguins
rec <- recipe(flipper_length_mm ~ ., data = penguins)
int_mod_1 <- rec %>%
step_interact(terms = ~ bill_depth_mm:bill_length_mm)
summary(int_mod_1)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_training
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes) %>%
step_interact(terms = ~ diameter:longest_shell) %>%
step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:starts_with('type')) %>%
step_interact(terms = ~ diameter:longest_shell) %>%
step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_fit <- fit(lm_workflow, abalone_training)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_center(all_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes) %>%
step_interact(terms = ~ diameter:longest_shell) %>%
step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
data1 <- read.csv('/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv')
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram(col='white', binwidth = 1) # plot the age column using histogram to make it access.
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone_split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone_training <- training(abalone_split) # this is training data set
abalone_testing <- testing(abalone_split) # this is testing data set
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone_split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone_training <- training(abalone_split) # this is training data set
abalone_testing <- testing(abalone_split) # this is testing data set
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone_split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone_training <- training(abalone_split) # this is training data set
abalone_testing <- testing(abalone_split) # this is testing data set
library(tidymodels)
library(tidyverse)
data1 <- read.csv('/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv')
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram(col='white', binwidth = 1) # plot the age column using histogram to make it access.
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone_split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone_training <- training(abalone_split) # this is training data set
abalone_testing <- testing(abalone_split) # this is testing data set
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choise(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choice(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_model <- linear_reg() %>%
set_engine('lm') # create and store a linear regression object
lm_model
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
library(tidymodels)
library(tidyverse)
data1 <- read.csv('/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv')
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram(col='white', binwidth = 1) # plot the age column using histogram to make it access.
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone_split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone_training <- training(abalone_split) # this is training data set
abalone_testing <- testing(abalone_split) # this is testing data set
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choice(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight_x_type_yes+
diameter_x_longest_shell+
shell_weight_x_shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_model <- linear_reg() %>%
set_engine('lm') # create and store a linear regression object
lm_model
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choice(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_model <- linear_reg() %>%
set_engine('lm') # create and store a linear regression object
lm_model
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
library(tidymodels)
library(tidyverse)
data1 <- read.csv('/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv')
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram(col='white', binwidth = 1) # plot the age column using histogram to make it access.
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone_split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone_training <- training(abalone_split) # this is training data set
abalone_testing <- testing(abalone_split) # this is testing data set
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choice(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:type_yes+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_model <- linear_reg() %>%
set_engine('lm') # create and store a linear regression object
lm_model
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
?step_interact
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choice(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:start_with('type_yes')+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_model <- linear_reg() %>%
set_engine('lm') # create and store a linear regression object
lm_model
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choice(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:starts_with('type_yes')+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_fit <- fit(lm_workflow, abalone_training)
lm_fit <- fit(lm_workflow, abalone_training)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choice(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:starts_with('type')+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_fit <- fit(lm_workflow, abalone_training)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy_multi_choice(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:starts_with('type')+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
#step_interact(terms = ~ diameter:longest_shell) %>%
#step_interact(terms = ~ shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_model <- linear_reg() %>%
set_engine('lm') # create and store a linear regression object
lm_model
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:starts_with('type')+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
library(tidymodels)
library(tidyverse)
data1 <- read.csv('/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv')
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram(col='white', binwidth = 1) # plot the age column using histogram to make it access.
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone_split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone_training <- training(abalone_split) # this is training data set
abalone_testing <- testing(abalone_split) # this is testing data set
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone_split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone_training <- training(abalone_split) # this is training data set
abalone_testing <- testing(abalone_split) # this is testing data set
#simple_abalone_recipe <- recipe(age~.,data = abalone_training)
abalone_recipe <- recipe(age~., data = abalone_training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ shucked_weight:starts_with('type')+
diameter:longest_shell+
shell_weight:shucked_weight) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
summary(abalone_recipe)
lm_model <- linear_reg() %>%
set_engine('lm') # create and store a linear regression object
lm_model
lm_workflow <- workflow() %>% # set up a new workflow
add_model(lm_model) %>% # add the linear model from question 4
add_recipe(abalone_recipe) # add the recipe from question 3
lm_workflow
lm_fit <- fit(lm_workflow, abalone_training)
lm_fit <- fit(lm_workflow, abalone_training)
lm_fit
?'fit'
help(fit())
?fit()
? fit()
#create a new dataframe including the question conditions
type <- c('F')
longest_shell <- 0.50
diameter <- 0.10
height <- 0.30
whole_weight <- 4
shucked_weight <- 1
viscera_weight <- 2
shell_weight <- 1
df <- data.frame(type, longest_shell, diameter, height, whole_weight. shucked_weight, viscera_weight, shell_weight)
#create a new dataframe including the question conditions
type <- c('F')
longest_shell <- 0.50
diameter <- 0.10
height <- 0.30
whole_weight <- 4
shucked_weight <- 1
viscera_weight <- 2
shell_weight <- 1
hypo1 <- data.frame(type, longest_shell, diameter, height, whole_weight. shucked_weight, viscera_weight, shell_weight)
#create a new dataframe including the question conditions
type <- c('F')
longest_shell <- 0.50
diameter <- 0.10
height <- 0.30
whole_weight <- 4
shucked_weight <- 1
viscera_weight <- 2
shell_weight <- 1
hypo1 <- data.frame(type, longest_shell, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight)
lm_fit <- fit(lm_workflow, hypo1)
#create a new dataframe including the question conditions
type <- c('F')
longest_shell <- 0.50
diameter <- 0.10
height <- 0.30
whole_weight <- 4
shucked_weight <- 1
viscera_weight <- 2
shell_weight <- 1
hypo1 <- data.frame(type, longest_shell, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight)
hypo1
#create a new dataframe including the question conditions
type <- c('F')
longest_shell <- 0.50
diameter <- 0.10
height <- 0.30
whole_weight <- 4
shucked_weight <- 1
viscera_weight <- 2
shell_weight <- 1
hypo1 <- data.frame(type, longest_shell, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight)
lm_fit <- fit(lm_workflow, abalone_training) # fit the training data
predict(lm_fit, hypo1)
library(yardstick)
library(tidymodels)
library(tidyverse)
matx1 <- cbind('\R^2')
matx1 <- cbind('R^2')
matx1 <- cbind('R^2')
matx1
Rsqure <- c()
RMSE <- c()
MAE <- c()
matx1 <- cbind(Rsqure, RMSE, MAE)
matx1
matx1 <- cbind(Rsqure, RMSE, MAE)
matx1 <- cbind(Rsqure, RMSE, MAE)
matx1
matx1 <- cbind(Rsqure, RMSE, MAE)
matx1
matx1 <- cbind('Rsqure', 'RMSE', 'MAE')
matx1
abalone_training_res <- predict(lm_fit, new_data = abalone_training %>% select(-age))
abalone_training_res <- predict(lm_fit, new_data = abalone_training %>% select(-age))
abalone_training_res <- bind_cols(abalone_training_res, abalone_training %>% select(age))
abalone_training_res <- predict(lm_fit, new_data = abalone_training %>% select(-age))
abalone_training_res <- bind_cols(abalone_training_res, abalone_training %>% select(age))
abalone_matrics <- metric_set(rsq, rmse, mae)
abalone_matrics(abalone_training_res,truth = age)
abalone_training_res <- predict(lm_fit, new_data = abalone_training %>% select(-age))
abalone_training_res <- bind_cols(abalone_training_res, abalone_training %>% select(age))
abalone_matrics <- metric_set(rsq, rmse, mae)
abalone_matrics(abalone_training_res,truth = age, estimate = .pred)
? initil_split()
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE)
library(ggplot2)
library(tidyverse)
library(tidymodels)
library(corrplot)
library(ggthemes)
tidymodels_prefer()
set.seed(3435)
diamonds_split <- initial_split(diamonds, prop = 0.80,
strata = price)
diamonds_split
diamonds_split1 <- initial_split(diamonds, prop = 0.80)
diamonds_split1
#diamonds_train <- training(diamonds_split)
#diamonds_test <- testing(diamonds_split)
View(diamonds_split)
set.seed(3435)
diamonds_split <- initial_split(diamonds, prop = 0.80,
strata = price)
head(diamonds_split)
set.seed(3435)
diamonds_split <- initial_split(diamonds, prop = 0.80,
strata = price)
summary(diamonds_split)
diamonds_split1 <- initial_split(diamonds, prop = 0.80)
diamonds_split1
#diamonds_train <- training(diamonds_split)
#diamonds_test <- testing(diamonds_split)
set.seed(3435)
diamonds_split <- initial_split(diamonds, prop = 0.80,
strata = price)
summary(diamonds_split)
diamonds_split1 <- initial_split(diamonds, prop = 0.80)
summarydiamonds_split1
set.seed(3435)
diamonds_split <- initial_split(diamonds, prop = 0.80,
strata = price)
summary(diamonds_split)
diamonds_split1 <- initial_split(diamonds, prop = 0.80)
summary(diamonds_split1)
#diamonds_train <- training(diamonds_split)
#diamonds_test <- testing(diamonds_split)
set.seed(3435)
diamonds_split <- initial_split(diamonds, prop = 0.80,
strata = price)
head(diamonds_split)
set.seed(3435)
diamonds_split <- initial_split(diamonds, prop = 0.80,
strata = price)
summary(diamonds_split)
diamonds_split1 <- initial_split(diamonds, prop = 0.80)
summary(diamonds_split1)
#diamonds_train <- training(diamonds_split)
#diamonds_test <- testing(diamonds_split)
? step_interact()
? mutate()
