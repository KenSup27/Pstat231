geom_smooth(formula = y ~xmethod = 'loess', se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, linetype = 'dashed')
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, color = 'blue')
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE')
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_continuous(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, fill = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = factor(drv)))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv, color='blue'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv, color = 'blue'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(aes(formula = y ~x, method = 'loess', se = FALSE, linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, aes(method = 'loess', se = FALSE, linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy))+
geom_point(aes(color = drv))+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
mpg
#install.packages("tidyverse")
#install.packages("corrplot")
#install.packages('ggthemes')
library(tidyverse)
library(corrplot)
library(ggthemes)
mpg
ggplot(mpg,aes(hwy, group=cyl)) + geom_boxplot()
vignettes/*.html
vignettes/*.html
data <- read.table('TSLA.numbers')
install.packages("readxl")
library(readxl)
#install.packages("readxl")
#library(readxl)
read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.numbers")
#install.packages("readxl")
#library(readxl)
read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("readxl")
#library(readxl)
data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("readxl")
#library(readxl)
data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
data[1]
#install.packages("readxl")
#library(readxl)
data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
data[2]
#install.packages("readxl")
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
install.packages("quantmod")
#install.packages("readxl")
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
#install.packages("readxl")
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
getQuote("TSLA")
#install.packages("readxl")
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
getQuote("TSLA", src = 'yahoo')
#install.packages("readxl")
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
getQuote("TSLA", src = 'yahoo')
#install.packages("readxl")
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
getQuote("TSLA", src = 'yahoo')
#install.packages("readxl")
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLA <- getSymbols('TSLA', from = start_date, to = end_date)
TSLA
#install.packages("readxl")
install.packages(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLA <- getSymbols('TSLA', from = start_date, to = end_date)
TSLA
#install.packages("readxl")
install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLA <- getSymbols('TSLA', from = start_date, to = end_date)
TSLA
install.packages("xts")
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLA <- getSymbols('TSLA', from = start_date, to = end_date)
TSLA
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLA <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
TSLA
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLA <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
#TSLA
TSLA(1)
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLA <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
type(TSLA)
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLAData <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
type(TSLAData)
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLAData <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
typeof(TSLAData)
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLAData <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLAData <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
TSLAData
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLAData <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
TSLAData
#install.packages("readxl")
#install.packages('xts')
library(xts)
#library(readxl)
#data <- read_excel("/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/TSLA.xlsx")
#install.packages("quantmod")
library(quantmod)
start_date <- as.Date("2018-07-01")
end_date <- as.Date("2022-09-30")
TSLAData <- getSymbols('TSLA', from = start_date, to = end_date, auto.assign = F)
TSLAData
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1 <- read.csv('/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram(col='white', binwidth = 1) # plot the age column using histogram to make it access.
library(tidymodels)
library(tidymodels)
#library(tidymodels)
#library(tidyverse)
install.packages('tidymodels')
library(tidymodels)
library(tidymodels)
library(tidyverse)
data1 <- read.csv('/Users/wentaoyu/Documents/UCSB File/Stats/Pstat131/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram(col='white', binwidth = 1) # plot the age column using histogram to make it access.
set.seed(4177) # set seed to make sure the output is stable
abalone.split <- initial_split(data2, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
library(tidymodels)
#library(tidymodels)
install.packages('lava')
#library(tidyverse)
library(tidymodels)
library(tidyverse)
set.seed(4177) # set seed to make sure the output is stable
abalone.split <- initial_split(data2, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
abalone.training
set.seed(4177) # set seed to make sure the output is stable
data3 = data2[1:8]
abalone.split <- initial_split(data2, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
abalone.training
set.seed(4177) # set seed to make sure the output is stable
data3 = data2[1:8]
data3
abalone.split <- initial_split(data2, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
abalone.training
set.seed(4177) # set seed to make sure the output is stable
data3 = data2[1:8] # new dataframe exclude rings and age
abalone.split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
abalone.training
simple_abalone_recipe <- recipe(age~.,data = data3)
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
set.seed(4177) # set seed to make sure the output is stable
data3 = data2[1:8] # new dataframe exclude rings
abalone.split <- initial_split(data2, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
#abalone.training
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
simple_abalone_recipe
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -'rings') # new dataframe exclude rings
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone.split <- initial_split(data2, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
#abalone.training
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
data3
abalone.split <- initial_split(data2, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
#abalone.training
set.seed(4177) # set seed to make sure the output is stable
data3 = subset(data2, select = -c(rings)) # new dataframe exclude rings
abalone.split <- initial_split(data3, prop = 0.80) # split the data set, then what is the appropriate percentage, may need a new data set since we cannot include rings and age????
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
#abalone.training
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
simple_abalone_recipe
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %<%
step_dummy(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors())
abalone.recipe
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact()
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(all_nominal_predictors()) %>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(all_nominal_predictors()) %>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
abalone.recipe
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors())
interacations <- step_interact(abalone.recipe)
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors())
interacations <- step_interact(abalone.recipe, all_nominal_predictors())
#step_center(all_nominal_predictors()) %>%
#step_scale(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors())
interacations <- step_interact(abalone.recipe, all_nominal_predictors())
interacations
#step_center(all_nominal_predictors()) %>%
#step_scale(all_nominal_predictors())
View(interacations)
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact() %>% #need revise
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>% #need revise
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>% #need revise
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
abalone.recipe
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~c(type: shucked_weight, longest_shell:diameter, shucked_weight:shell_weight)) %>% #need revise
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
abalone.recipe
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>%
step_interact(terms = ~longest_shell:diameter) %>%
step_interact(terms = ~shucked_weight:shell_weight)%>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
abalone.recipe
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>%
step_interact(terms = ~longest_shell:diameter) %>%
step_interact(terms = ~shucked_weight:shell_weight)%>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>%
step_interact(terms = ~longest_shell:diameter) %>%
step_interact(terms = ~shucked_weight:shell_weight)%>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
data3
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone.recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>%
step_interact(terms = ~longest_shell:diameter) %>%
step_interact(terms = ~shucked_weight:shell_weight)%>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
abalone.training
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone_recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>%
step_interact(terms = ~longest_shell:diameter) %>%
step_interact(terms = ~shucked_weight:shell_weight)%>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone_recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>%
step_interact(terms = ~longest_shell:diameter) %>%
step_interact(terms = ~shucked_weight:shell_weight)%>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
abalone_recipe
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone_recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type_yes: shucked_weight) %>%
step_interact(terms = ~longest_shell:diameter) %>%
step_interact(terms = ~shucked_weight:shell_weight)%>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
abalone_recipe
simple_abalone_recipe <- recipe(age~.,data = abalone.training)
abalone_recipe <- recipe(age~., data = abalone.training) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~type: shucked_weight) %>%
step_interact(terms = ~longest_shell:diameter) %>%
step_interact(terms = ~shucked_weight:shell_weight)%>%
step_center(all_nominal_predictors()) %>%
step_scale(all_nominal_predictors())
abalone_recipe
View(abalone.recipe)
View(abalone_recipe)
View(data3)
View(data2)
View(data3)
View(data3)
summary(abalone_recipe)
