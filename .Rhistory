#install.packages("tidyverse")
install.packages("corrplot")
install.packages('ggthemes')
library(tidyverse)
library(corrplot)
library(ggthemes)
ggplot(mpg)
numeric_data <- select_if(mpg, is.numeric)
corrplot(cor(numeric_data),method = 'number', type = 'lower')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
theme_gray()
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
geom_point()
ggplot(mpg, aes(x = hwy, y= class), fill(drv))+
geom_boxplot()
ggplot(mpg, aes(x = hwy, y= class), fill=factor(drv))+
geom_boxplot()
ggplot(mpg, aes(x = hwy, y= class), fill=factor(drv))+
geom_boxplot()+
theme_bw()
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
theme_bw()
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
geom_point('jitter')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
geom_point(position = 'jitter')
theme_bw()+
labs(x='Highway MPG', y='Vehicle Class')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
geom_point(position = 'jitter')
theme_bw()+
labs(x='Highway MPG', y='Vehicle Class')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
geom_point(position = 'jitter')
theme_bw()+
labs(x='Highway MPG', y='Vehicle Class')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
geom_point(position = 'jitter', col('gray'))
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
geom_point(position = 'jitter', color = 'gray')
theme_bw()+
labs(x='Highway MPG', y='Vehicle Class')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot()+
geom_point(position = 'jitter', color = 'light gray')
theme_bw()+
labs(x='Highway MPG', y='Vehicle Class')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot(color = 'black')+
geom_point(position = 'jitter', color = 'light gray')
theme_bw()+
labs(x='Highway MPG', y='Vehicle Class')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot(color = 'black')+
geom_point(position = 'jitter', color = 'light gray')+
theme_bw()+
labs(x='Highway MPG', y='Vehicle Class')
mpg
#install.packages("tidyverse")
#install.packages("corrplot")
#install.packages('ggthemes')
library(tidyverse)
library(corrplot)
library(ggthemes)
mpg
ggplot(mpg,aes(hwy))+geom_histogram(color = "white", binwidth = 1)
ggplot(mpg,aes(hwy,cty))+geom_point()
ggplot(mpg,aes(x = reorder(manufacturer,manufacturer, function(x)-length(x))))+geom_bar()+coord_flip()+
labs(x = 'manufacturer', y = 'counts')
# how to change it to from highest to lowest
ggplot(mpg,aes(hwy)) + geom_boxplot(aes(group=cyl))
ggplot(mpg, aes(x = class, y = hwy))+
geom_boxplot(group_by(drv))
ggplot(mpg, aes(x = class, y = hwy))+
geom_boxplot(group_by(mpg$drv))
ggplot(mpg, aes(x = class, y = hwy))+
geom_boxplot(group = drv)
ggplot(mpg, aes(x = class, y = hwy))+
geom_boxplot(aes(group = drv))
ggplot(mpg, aes(x = class, y = hwy))+
geom_boxplot()
ggplot(mpg, aes(x = class, y = hwy, color = drv))+
geom_boxplot()
ggplot(mpg, aes(x = class, y = hwy, fill = drv))+
geom_boxplot()
ggplot(mpg, aes(x = displ, y = hyw))+
geom_point()
ggplot(mpg, aes(x = displ, y = hwy))+
geom_point()
ggplot(mpg, aes(x = displ, y = hwy, fill = drv))+
geom_point()
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()
ggplot(mpg, aes(x = displ, y = hwy, fill = drv))+
geom_point()
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_line()
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_line(aes(drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_line(aes(color = drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(aes(color = drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth()
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(color = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(aes(fill = drv), color = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_line(aes(fill = drv), color = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_density(aes(fill = drv), color = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_curve(aes(fill = drv), color = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_path(aes(fill = drv), color = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_abline(aes(fill = drv), color = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = lm)
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = lm)+
theme_gray()
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE, color = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE, linetye=['dashed', 'dashed', 'dashed'])
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE, linetye='dashed', 'dashed', 'dashed')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE, linetye='dashed')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE, linetype='dashed')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE, linetype='dashed')+
scale_color_manual('blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE, linetype='dashed')+
scale_color_manual(value = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE, linetype='dashed')+
scale_color_manual(values = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE)+
scale_color_manual(values = 'blue')
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = hwy ~ displ,method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~ x,method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_line(method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(method = 'loess', se = FALSE)
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~xmethod = 'loess', se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, linetype = 'dashed')
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, color = 'blue')
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE')
#scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_continuous(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, fill = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = factor(drv)))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE)+
scale_linetype_manual(values = c('solid', 'dashed', 'dotted'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv, color='blue'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv, color = 'blue'))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(aes(formula = y ~x, method = 'loess', se = FALSE, linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, aes(method = 'loess', se = FALSE, linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv))+
geom_point()+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
ggplot(mpg, aes(x = displ, y = hwy))+
geom_point(aes(color = drv))+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
#install.packages("tidyverse")
#install.packages("corrplot")
#install.packages('ggthemes')
library(tidyverse)
library(corrplot)
library(ggthemes)
ggplot(mpg,aes(hwy))+geom_histogram(color = "white", binwidth = 1)
ggplot(mpg,aes(hwy,cty))+geom_point()
ggplot(mpg,aes(x = reorder(manufacturer,manufacturer, function(x)-length(x))))+geom_bar()+coord_flip()+
labs(x = 'manufacturer', y = 'counts')
# how to change it to from highest to lowest
ggplot(mpg,aes(hwy, group=cyl)) + geom_boxplot()
numeric_data <- select_if(mpg, is.numeric)
corrplot(cor(numeric_data),method = 'number', type = 'lower')
ggplot(mpg, aes(x = hwy, y= class))+
geom_boxplot(color = 'black')+
geom_point(position = 'jitter', color = 'light gray')+
theme_bw()+
labs(x='Highway MPG', y='Vehicle Class')
ggplot(mpg, aes(x = class, y = hwy, fill = drv))+
geom_boxplot()
ggplot(mpg, aes(x = displ, y = hwy))+
geom_point(aes(color = drv))+
geom_smooth(formula = y ~x, method = 'loess', se = FALSE, aes(linetype=drv))
mpg
ggplot(mpg,aes(hwy)) + geom_boxplot(aes(group = cyl))
ggplot(mpg,aes(hwy)) + geom_boxplot(aes(group = cyl))
ggplot(mpg,aes(hwy)) + geom_boxplot(aes(group = cyl))
ggplot(mpg,aes(hwy)) + geom_boxplot(aes(group = cyl))
ggplot(mpg,aes(hwy)) + geom_boxplot(aes(group = cyl))
ggplot(mpg,aes(hwy)) + geom_boxplot(aes(group = cyl))
ggplot(mpg,aes(hwy), group_by(cyl)) + geom_boxplot()
ggplot(mpg,aes(hwy, group_by(cyl))) + geom_boxplot()
ggplot(mpg,aes(hwy, group = cyl)) + geom_boxplot()
ggplot(mpg,aes(hwy, color = cyl)) + geom_boxplot()
ggplot(mpg,aes(hwy, group = cyl)) + geom_boxplot()
ggplot(mpg,aes(y = hwy, group = cyl)) + geom_boxplot()
ggplot(mpg,aes(hwy, group = cyl)) + geom_boxplot()
ggplot(mpg,aes(hwy, color = factor(cyl))) + geom_boxplot()
ggplot(mpg,aes(hwy, group = factor(cyl))) + geom_boxplot()
ggplot(mpg,aes(hwy, color= factor(cyl))) + geom_boxplot()
install.packages("tidymodels")
library(tidymodels)
library(tidyverse)
read.csv('D:\Github\Pstat131\homework-2\homework-2\data\abalone.xlse')
read.csv('Github\Pstat131\homework-2\homework-2\data\abalone.xlse')
read.csv('Github\Pstat131\homework-2\homework-2\data\abalone.xlse')
print(getcd())
getcd()
getwd()
read.csv('D:\Github\Pstat131\homework-2\homework-2\data\abalone.xlse')
read.csv('D:\Github\Pstat131\homework-2\homework-2\data\abalone.xlse')
read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.xlse')
read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.cvs')
file.exists('D:/Github/Pstat131/homework-2/homework-2/data/abalone.cvs')
file.exists('D:/Github/Pstat131/abalone.cvs')
file.exists('D:/Github/Pstat131/abalone.cvs')
file.exists('D:/Github/Pstat131/abalone.cvs')
file.exists('D:/Github/Pstat131/abalone.cvs')
file.exists('D:/Github/Pstat131/abalone.cvs')
getwd()
file.exists('/Github/Pstat131/abalone.cvs')
file.exists('D:\Github\Pstat131\homework-2\homework-2\data\abalone.csv')
file.exists('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv')
read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv')
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv')
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
typeof(data1)
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
data1(9)
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
data1[9]
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
data1[9]+1.5
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
data2 <- append(data1, data1[9]+1.5)
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
data2 <- append(data1, data1[9]+1.5)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
age <- data1[9]+1.5
data2 <- append(data1, age)
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
age <- data1[9]+1.5
data2 <- append(data1, age)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
age <- data1[9]+1.5
data2 <- append(data1, age, after = 9)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
age <- data1[9]+1.5
data2 <- cbind(data1,age)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
age <- data1[9]+1.5
data2 <- cbind(data1,age, age=vec2)
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
age <- data1[9]+1.5
data2 <- cbind(data1,age=age)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
data1
age <- data1[9]+1.5
data2 <- cbind(data1,'age'=age)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1[9]+1.5
data2 <- cbind(data1,'age'=age)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1[9]+1.5
data2 <- cbind('1'=data1,'age'=age)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1.value[9]+1.5
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
data1[9]
#data2 <- cbind(data1,'age'=age)
#data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
data1[[9]]
#data2 <- cbind(data1,'age'=age)
#data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
data1[9].values
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
data1[9,2:]
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1[9]
data2 <- cbind(data1,age)
#data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1[9]
data2 <- cbind(data1,age)
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1[9]
data2 <- cbind(data1,age)
data2
names(data2)[9] <- 'age'
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1[9]
data2 <- cbind(data1,age)
data2
names(data2)[9] <- 'age'
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1[9]
data2 <- cbind(data1,age)
data2
names(data2)[10] <- 'age'
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
#data1
age <- data1[9]+1.5
data2 <- cbind(data1,age)
data2
names(data2)[10] <- 'age'
data2
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
plot(data2[10])
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
hist(data2[10])
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram()
data1 <- read.csv('D:/Github/Pstat131/homework-2/homework-2/data/abalone.csv') # import dataset
age <- data1[9]+1.5 # extract the rings column since age = rings+1.5
data2 <- cbind(data1,age) # add a new column into the dataframe
names(data2)[10] <- 'age' # rename the new column as age
ggplot(data2, aes(age))+
geom_histogram(col='white', binwidth = 1)
set.seed(4177) # set seed to make sure the output is stable
abalone.split <- initial_split(data2, prop = 0.80) # split the data set
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
set.seed(4177) # set seed to make sure the output is stable
abalone.split <- initial_split(data2, prop = 0.80) # split the data set, then what is the appropriate percentage
abalone.training <- training(abalone.split) # this is training data set
abalone.testing <- testing(abalone.split) # this is testing data set
abalone.training
